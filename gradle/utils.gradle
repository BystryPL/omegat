ext {
    loadProperties = { propFile ->
        def config = new Properties()
        if (propFile.canRead()) {
            propFile.withInputStream { config.load(it) }
        }
        config
    }

    doCmd = { cmd ->
        StringBuilder output = new StringBuilder()
        cmd.execute().waitForProcessOutput(output, null)
        output.toString().trim()
    }

    getUpdateSuffix = { update ->
        if (!update || update == '0') {
            return ''
        }
        if (update.length() == 1) {
            return "_0${update}"
        }
        "_${update}"
    }

    detectRevision = { ->
        /*
         Set the revision number included in version strings. The value is
         chosen from the first valid value in:
         0. Provided as the Gradle property 'repo.revision'
         1. src/org/omegat/Version.properties (only if not "dev", i.e. this is a
            source package not under VCS)
         2. This svn checkout's revision
         3. This git clone's SHA-1
         4. If none of the above, the value "unknown"
         */
        def provided = findProperty('repoRevision') ?: ''
        def git = file('.git').directory ? doCmd('git rev-parse --short HEAD') : ''
        def svn = file('.svn').directory ? doCmd('svnversion') : ''
        [provided, omtVersion.revision, git, svn, 'unknown'].find {
            it != 'dev' && !it.empty
        }
    }

    repoHasChanges = {
        if (file('.git').directory) {
            !doCmd('git status -s').empty
        } else if (file('.svn').directory) {
            !doCmd('svn status -q').empty
        } else {
            false
        }
    }
}
